---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: regular
spec:
  provider: vault
  secretObjects:
    - secretName: regular
      type: Opaque
      data:
      - objectName: regular
        key: sir
  parameters:
    roleName: {{ .Values.vault.role }}
    vaultSkipTLSVerify: "true"
    vaultAddress: {{ .Values.vault.address }}
    vaultNamespace: {{ .Values.vault.namespace }}
    vaultKubernetesMountPath: {{ .Values.vault.auth_path }}
    objects: |
      - objectName: regular
        secretPath: kv2/data/client
        secretKey: sir
# this deployment checks to see if we can access secrets using a standard approach
# vault_namespace=client
# path=kv2/data/client
# this will not reach across namespaces
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: regular-csi
  labels: {{- include "labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    labels: {{- include "selector_labels" . | nindent 6 }}
    matchLabels: {{- include "selector_labels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "selector_labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.service_account_name }}
      containers:
        - name: main
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          resources: {{ .Values.resources | toYaml | nindent 11 }}
          volumeMounts:
          - name: secrets-store-inline
            mountPath: /mnt/csi
            readOnly: true
          command:
            - /bin/bash
            - -lc
            - |
              set -x
              ls -lh /mnt/csi
              res=$(cat /mnt/csi/regular)
              if [ "$res" != "smokesalot" ]; then
                echo failed to load csi secret
                exit 1
              fi
              echo csi success
              sleep 10000000
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: regular
